{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","hoc/withAuthRedirect.js","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","DialogItem","props","className","styles","dialog","active","to","id","name","Message","message","maxLength50","maxLengthCreator","AddMessageReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","placeholder","validate","required","Dialogs","state","dialogsPage","dialogElements","dialogs","map","el","key","messagesElements","messages","msg","dialogsList","messagesList","values","sendMessage","newMessageText","mapStateToPropsForRedirect","isAuth","auth","compose","connect","dispatch","sendMessageActionCreator","Component","RedirectComponent","this","React"],"mappings":"iGACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,YAAc,6BAA6B,aAAe,8BAA8B,OAAS,wBAAwB,OAAS,0B,+FCUxKC,EAPI,SAACC,GAClB,OAAO,yBAAKC,UAAWC,IAAOC,OAAS,IAAMD,IAAOE,QAClD,kBAAC,IAAD,CAASC,GAAI,YAAcL,EAAMM,IAAjC,IAAuCN,EAAMO,KAA7C,QCKWC,EATC,SAACR,GAEf,OACE,6BACGA,EAAMS,U,kCCoCPC,EAAcC,YAAiB,IAiB/BC,EAAsBC,YAAU,CAACC,KAAM,sBAAjBD,EAhBL,SAACb,GACtB,OACI,0BAAMe,SAAUf,EAAMgB,cAClB,6BACI,kBAACC,EAAA,EAAD,CAAOC,UAAWC,IAClBC,YAAa,oBACbb,KAAM,iBACNc,SAAU,CAACC,IAAUZ,MAGzB,6BAAK,6CAQAa,EArDC,SAACvB,GAEf,IAAIwB,EAAQxB,EAAMyB,YAEdC,EAAiBF,EAAMG,QAAQC,KAAI,SAAAC,GAAE,OAAI,kBAAC,EAAD,CAAYtB,KAAMsB,EAAGtB,KAAMuB,IAAKD,EAAGvB,GAAIA,GAAIuB,EAAGvB,QAEvFyB,EAAmBP,EAAMQ,SAASJ,KAAI,SAAAK,GAAG,OAAI,kBAAC,EAAD,CAASxB,QAASwB,EAAIxB,QAASqB,IAAKG,EAAI3B,QAOzF,OACE,yBAAKL,UAAWC,IAAOyB,SACrB,yBAAK1B,UAAWC,IAAOgC,aACrB,uCAECR,GAGH,6BAEE,yBAAKzB,UAAWC,IAAOiC,cACrB,wCACCJ,EACD,kBAACnB,EAAD,CAAqBG,SAjBT,SAACqB,GACnBpC,EAAMqC,YAAYD,EAAOE,uB,+CCdzBC,EAA6B,SAACf,GAAD,MAAY,CACzCgB,OAAQhB,EAAMiB,KAAKD,S,OCiBRE,4BACbC,aAhBoB,SAACnB,GAErB,MAAO,CACLC,YAAaD,EAAMC,gBAIE,SAACmB,GACxB,MAAO,CACLP,YAAa,SAACC,GACZM,EAASC,YAAyBP,UDTR,SAACQ,GAAe,IACtCC,EADqC,uKAGnC,OAAKC,KAAKhD,MAAMwC,OACT,kBAACM,EAAcE,KAAKhD,OADI,kBAAC,IAAD,CAAUK,GAAI,eAHV,GACX4C,IAAMH,WAMtC,OAAOH,YAAQJ,EAARI,CAAoCI,KCOhCL,CAGbnB","file":"static/js/4.f7f76ee4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2xRSA\",\"dialogsList\":\"Dialogs_dialogsList__137kM\",\"messagesList\":\"Dialogs_messagesList__3P5tp\",\"active\":\"Dialogs_active__2sQhs\",\"dialog\":\"Dialogs_dialog__lk_cw\"};","import React from 'react';\nimport styles from './../Dialogs.module.css';\nimport { NavLink } from 'react-router-dom';\n\nconst DialogItem = (props) => {\n  return <div className={styles.dialog + ' ' + styles.active}>\n    <NavLink to={'/dialogs/' + props.id}> {props.name}  </NavLink>\n  </div>\n\n}\n\nexport default DialogItem;\n","import React from 'react';\n\nconst Message = (props) => {\n\n  return (\n    <div>\n      {props.message}\n    </div>\n  )\n}\n\nexport default Message;\n","import React from 'react';\nimport styles from './Dialogs.module.css';\nimport DialogItem from './DialogItem/DialogItem'\nimport Message from './Message/Message'\nimport {Field, reduxForm} from 'redux-form'\nimport { required, maxLengthCreator } from '../../validators/validators';\nimport { Textarea } from '../common/FormsControls/FormsControls';\n\nconst Dialogs = (props) => {\n\n  let state = props.dialogsPage;\n\n  let dialogElements = state.dialogs.map(el => <DialogItem name={el.name} key={el.id} id={el.id} />);\n\n  let messagesElements = state.messages.map(msg => <Message message={msg.message} key={msg.id} />);\n\n \n  let addNewMessage = (values) => {\n    props.sendMessage(values.newMessageText)\n  }\n\n  return (\n    <div className={styles.dialogs}>\n      <div className={styles.dialogsList}>\n        <h3>Dialogs</h3>\n\n        {dialogElements}\n      </div>\n\n      <div>\n\n        <div className={styles.messagesList}>\n          <h3>Messages</h3>\n          {messagesElements}\n          <AddMessageReduxForm onSubmit={addNewMessage}/>\n        \n        </div>\n\n      </div>\n    </div>\n  );\n}\nconst maxLength50 = maxLengthCreator(50)\nconst AddMessageForm = (props) => {\n  return (\n      <form onSubmit={props.handleSubmit}>\n          <div>\n              <Field component={Textarea} \n              placeholder={'Type your message'} \n              name={'newMessageText'} \n              validate={[required, maxLength50]}\n              />\n          </div>\n          <div><button>Send</button></div>\n      </form>\n  )\n}\n\n\nconst AddMessageReduxForm = reduxForm({form: 'dialogsMessageForm'})(AddMessageForm)\n\nexport default Dialogs;\n","import React from 'react'\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nlet mapStateToPropsForRedirect = (state) => ({\n    isAuth: state.auth.isAuth\n  })\n\nexport const withAuthRedirect = (Component) => {\n    class RedirectComponent extends React.Component {\n        render() {\n            if (!this.props.isAuth) return <Redirect to={'/login'} />\n            return <Component {...this.props} />\n        }\n    }\n    return connect(mapStateToPropsForRedirect)(RedirectComponent)\n}","import React from 'react';\nimport { sendMessageActionCreator} from '../../redux/dialogsReducer'\nimport Dialogs from './Dialogs';\nimport { connect } from 'react-redux';\nimport {withAuthRedirect} from '../../hoc/withAuthRedirect';\nimport { compose } from 'redux';\n\nlet mapStateToProps = (state) => {\n\n  return {\n    dialogsPage: state.dialogsPage\n  }\n}\n\nlet mapDispatchToProps = (dispatch) => {\n  return {\n    sendMessage: (newMessageText) => {\n      dispatch(sendMessageActionCreator(newMessageText));\n    }\n  }\n}\n\nexport default compose(\n  connect(mapStateToProps, mapDispatchToProps),\n  withAuthRedirect\n)(Dialogs)\n"],"sourceRoot":""}