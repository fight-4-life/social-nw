{"version":3,"sources":["redux/profileReducer.ts","assets/mrrobot.png","api/api.ts","redux/dialogsReducer.ts","assets/eye.png","components/Login/Login.module.css","components/Footer/Footer.module.css","components/Sidebar/Sidebar.module.css","components/Nav/Nav.module.css","components/Nav/Nav.jsx","components/Photos/Photos.jsx","components/Music/Music.jsx","components/Settings/Settings.jsx","redux/usersReducer.ts","components/Users/Pagination.tsx","components/Users/Users.tsx","redux/userSelectors.ts","components/Users/UsersContainer.tsx","components/Header/Header.jsx","redux/authReducer.ts","components/Header/HeaderComponent.jsx","components/Login/Login.tsx","redux/appReducer.ts","components/common/Time/Time.jsx","components/Footer/Footer.jsx","components/Sidebar/Sideber.jsx","components/common/404/page404.jsx","App.js","serviceWorker.js","redux/reduxStore.ts","index.js","components/common/FormsControls/FormsControls.module.css","components/Users/Pagination.module.css","components/common/FormsControls/FormsControls.tsx","components/Users/Users.module.css","components/common/Preloader/Preloader.jsx","validators/validators.ts","components/Header/Header.module.css"],"names":["ADD_POST","initialState","posts","id","post","likesCount","profile","status","getUserProfile","userId","dispatch","a","profileAPI","getProfile","response","setUserProfile","data","getStatus","setStatus","updateStatus","resultCode","alert","savePhoto","file","savePhotoSuccess","photos","saveProfile","getState","auth","key","messages","match","toLowerCase","stopSubmit","contacts","Promise","reject","addNewPostActionCreator","newPostText","type","profileReducer","state","action","filter","p","module","exports","ResultCodeEnum","instance","axios","create","withCredentials","baseURL","headers","usersAPI","getUsers","currentPage","pageSize","get","then","follow","unfollow","delete","put","photoFile","formData","FormData","append","authAPI","me","res","login","email","password","rememberMe","captcha","logout","securityAPI","getCaptchaUrl","sendMessageActionCreator","newMessageText","dialogs","name","message","dialogsReducer","messageText","Nav","className","styles","nav","item","activeClassName","activeLink","to","Photos","Music","Settings","FOLLOW","users","totalUsersCount","isFetching","followingInProgress","followSuccess","unfollowSuccess","setCurrentPage","toggleIsFetching","toggleIsFollowing","usersReducer","map","u","followed","Pagination","totalItemsCount","onPageChange","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","paginator","portionButton","onClick","cn","selectedPage","pageNumber","Users","props","usersPage","userInList","userName","userPic","alt","src","small","userPhoto","size","danger","disabled","some","createSelector","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","UsersContainer","this","pageTitle","Preloader","isAuth","React","Component","compose","connect","page","items","totalCount","Header","header","logo","logoutButton","captchaUrl","setAuthUserData","payload","getCaptchaUrlSuccess","getAuthUserData","meData","Success","url","authReducer","HeaderComponent","LoginReduxForm","reduxForm","form","handleSubmit","error","onSubmit","Field","placeholder","component","Input","validate","required","formSummaryError","loginButton","loginData","CaptchaIsRequired","messaage","length","_error","loginStyles","loginPage","initialized","appReducer","useEffect","Time","Date","toLocaleString","theTime","setTheTime","interval","setInterval","clearInterval","Footer","footer","Sidebar","sidebar","page404","title","subTitle","extra","href","DialogsContainer","lazy","ProfileContainer","App","initializeApp","exact","path","render","fallback","app","Boolean","window","location","hostname","require","createStore","combineReducers","applyMiddleware","store","profilePage","dialogsPage","formReducer","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","thunkMiddleware","_store_","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console","Textarea","input","meta","touched","hasError","formControl","value","maxLengthCreator","maxLength"],"mappings":"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","file":"static/js/main.ed908eab.chunk.js","sourcesContent":["import {PhotosType, ProfileType} from './../types/types';\nimport { profileAPI } from '../api/api';\nimport { stopSubmit } from 'redux-form';\n\nconst ADD_POST = 'profile/ADD-POST';\nconst SET_USER_PROFILE = 'profile/SET_USER_PROFILE';\nconst SET_STATUS = 'profile/SET_STATUS';\nconst DELETE_POST = 'profile/DELETE_POST';\nconst SAVE_PHOTO_SUCCESS = 'profile/SAVE_PHOTO_SUCCESS';\n\ntype PostsType = {\n  id: number\n  post: string\n  likesCount: number\n}\n\nlet initialState = {\n  posts: [\n    { id: 1, post: 'Hey you there!', likesCount: 4 },\n    { id: 2, post: 'Bro.. nice 2 meet u', likesCount: 46 },\n    { id: 3, post: ':O:O:O:O', likesCount: 12 }\n  ] as Array<PostsType>,\n  profile: null as ProfileType | null,\n  status: ''\n}\n\nexport type InitialStateType = typeof initialState\n\nconst profileReducer = (state = initialState, action: any): InitialStateType => {\n\n  switch (action.type) {\n    case ADD_POST:\n      return {\n        ...state,\n        posts: [...state.posts, { id: 4, post: action.newPostText, likesCount: 0 }]\n      }\n    case SET_STATUS:\n      return {\n        ...state,\n        status: action.status\n      }\n    case SET_USER_PROFILE:\n      return {\n        ...state, profile: action.profile\n      }\n    case DELETE_POST:\n      return {\n        ...state, posts: state.posts.filter(p => p.id !== action.id)\n      }\n    case SAVE_PHOTO_SUCCESS:\n      return {\n        ...state, profile: { ...state.profile, photos: action.photos } as ProfileType\n      }\n    default:\n      return state\n  }\n}\n\nexport const getUserProfile = (userId: number) => {\n  return async (dispatch: any) => {\n    const response = await profileAPI.getProfile(userId)\n    dispatch(setUserProfile(response.data))\n  }\n}\n\nexport const getStatus = (userId: number) => {\n  return async (dispatch: any) => {\n    const response = await profileAPI.getStatus(userId)\n    dispatch(setStatus(response.data))\n  }\n}\n\nexport const updateStatus = (status: string) => {\n  return async (dispatch: any) => {\n    try {\n      const response = await profileAPI.updateStatus(status)\n      if (response.data.resultCode === 0) {\n        dispatch(setStatus(status))\n      }\n    } catch (error) {\n      alert(error) //here will be error handler\n    }\n  }\n}\n\nexport const savePhoto = (file: any) => async (dispatch: any) => {\n  const response = await profileAPI.savePhoto(file);\n  if (response.data.resultCode === 0) {\n    dispatch(savePhotoSuccess(response.data.data.photos));\n  }\n}\n\nexport const saveProfile = (profile: ProfileType) => async (dispatch: any, getState: any) => {\n  const userId = getState().auth.id\n  let response = await profileAPI.saveProfile(profile);\n  if (response.data.resultCode === 0) {\n    dispatch(getUserProfile(userId));\n  } else {\n    let key = response.data.messages[0].match(/Contacts->(\\w+)/)[1].toLowerCase();\n    dispatch(stopSubmit('editProfile', {\n      contacts: { [key]: response.data.messages[0] },\n    }))\n    return Promise.reject(response.data.messages[0])\n  }\n  //4 show general error {_error: response.data.messages[0] }\n\n}\ntype AddNewPostActionCreatorType = {\n  type: typeof ADD_POST\n  newPostText: string\n}\n\nexport const addNewPostActionCreator = (newPostText: string): AddNewPostActionCreatorType => ({ type: ADD_POST, newPostText })\n\ntype SetUserProfileActionType =\n  {\n    type: typeof SET_USER_PROFILE\n    profile: ProfileType\n  }\n\nexport const setUserProfile = (profile: ProfileType): SetUserProfileActionType => ({ type: SET_USER_PROFILE, profile })\n\ntype SetStatusActionType = {\n  type: typeof SET_STATUS\n  status: string \n}\n\nexport const setStatus = (status: string): SetStatusActionType => ({ type: SET_STATUS, status })\n\ntype DeletePostActionType = {\n  type: typeof DELETE_POST\n  id: number\n}\n\nexport const deletePost = (id: number): DeletePostActionType => ({ type: DELETE_POST, id })\n\ntype SavePhotoSuccessActionType = {\n  type: typeof SAVE_PHOTO_SUCCESS\n  photos: PhotosType \n}\n\nexport const savePhotoSuccess = (photos: PhotosType): SavePhotoSuccessActionType => ({ type: SAVE_PHOTO_SUCCESS, photos })\n\nexport default profileReducer","module.exports = __webpack_public_path__ + \"static/media/mrrobot.97f0a69e.png\";","import axios from 'axios';\nimport {ProfileType} from \"../types/types\";\n\nconst instance = axios.create({\n    withCredentials: true,\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\n    headers: { 'api-key': '8b8490ba-4ac0-44fd-a386-a1e6ec25d08c' }\n})\n\nexport const usersAPI = {\n    getUsers(currentPage: number, pageSize: number) {\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\n            .then(response => response.data)\n    },\n    follow(userId: number) {\n        return instance.post(`follow/${userId}`)\n    },\n    unfollow(userId: number) {\n        return instance.delete(`follow/${userId}`)\n    }\n}\n\nexport const profileAPI = {\n    getProfile(userId: number) {\n        return instance.get(`profile/${userId}`)\n    },\n    getStatus(userId: number) {\n        return instance.get(`profile/status/${userId}`)\n    },\n    updateStatus(status: string) {\n        return instance.put(`profile/status`, { status })\n    },\n    savePhoto(photoFile: any) {\n        const formData = new FormData()\n        formData.append('image', photoFile)\n        return instance.put('profile/photo', formData)\n    },\n    saveProfile(profile: ProfileType) {\n        return instance.put(`profile`, profile)\n    }\n}\n\nexport enum ResultCodeEnum {\n    Success = 0,\n    Error= 1,\n    CaptchaIsRequired = 10\n}\n\ntype MeResponseType = {\n    resultCode: ResultCodeEnum\n    messages: Array<string>\n    data: {\n        id: number\n        email: string\n        login: string\n    }\n}\n\ntype LoginResponseType = {\n    resultCode: ResultCodeEnum\n    messages: Array<string>,\n    data: {\n        userId: number\n    }\n}\n\nexport const authAPI = {\n    me() {\n        return instance.get<MeResponseType>(`auth/me`).then(res => res.data)\n    },\n    login(email: string, password: string, rememberMe = false, captcha: null | string = null) {\n        return instance.post<LoginResponseType>(`auth/login`, { email, password, rememberMe, captcha })\n            .then(res => res.data)\n    },\n    logout() {\n        return instance.delete(`auth/login`)\n    }\n}\n\nexport const securityAPI = {\n    getCaptchaUrl() {\n        return instance.get(`security/get-captcha-url`)\n    }\n}\n","const ADD_MESSAGE = 'dialogs/ADD-MESSAGE';\n\ntype SendMessageActionCreatorType = {\n  type: typeof ADD_MESSAGE\n  newMessageText: string\n}\n\nexport const sendMessageActionCreator = (newMessageText: string):SendMessageActionCreatorType => ({ type: ADD_MESSAGE, newMessageText })\n\ntype DialogType = { \n  id: number \n  name: string \n}\n\ntype MessageType = { \n  id: number \n  message: string \n}\n\nlet initialState = {\n  dialogs: [\n    { id: 1, name: 'Vavan' },\n    { id: 2, name: 'Iren' },\n    { id: 3, name: 'Bieven' },\n    { id: 4, name: 'Kama' },\n    { id: 5, name: 'Maga' },\n    { id: 6, name: 'Konek' }\n  ] as Array<DialogType>,\n  messages: [\n    { id: 1, message: 'Hello' },\n    { id: 2, message: 'What do we get for 10 dollars?' },\n    { id: 3, message: 'Everything' },\n    { id: 4, message: 'Ok alright' }\n  ] as Array<MessageType>\n}\n\nexport type InitialStateType = typeof initialState\n\nconst dialogsReducer = (state = initialState, action: any) => {\n  switch (action.type) {\n    case ADD_MESSAGE:\n      let messageText = action.newMessageText\n      return {\n        ...state,\n        messages: [...state.messages, { id: 5, message: messageText }]\n      }\n    default:\n      return state\n  }\n}\n\nexport default dialogsReducer","module.exports = __webpack_public_path__ + \"static/media/eye.16969707.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginPage\":\"Login_loginPage__-UEgp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__1w0lV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sidebar\":\"Sidebar_sidebar__2WupE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Nav_nav__3gICw\",\"item\":\"Nav_item__96rLj\",\"activeLink\":\"Nav_activeLink__GsTVR\"};","import React from 'react';\nimport styles from './Nav.module.css';\nimport { NavLink } from 'react-router-dom';\n\nfunction Nav() {\n  return (\n    <nav className={styles.nav}>\n      <ul>\n        <li className={styles.item} >\n          <NavLink activeClassName={styles.activeLink} to='/profile'>Profile</NavLink>\n        </li>\n        <li className={styles.item}>\n          <NavLink activeClassName={styles.activeLink} to='/dialogs'>Messages</NavLink>\n        </li>\n        <li className={styles.item}>\n          <NavLink activeClassName={styles.activeLink} to='/users'>Users</NavLink>\n        </li>\n        <li className={styles.item}>\n          <NavLink activeClassName={styles.activeLink} to='/photos'>Photos</NavLink>\n        </li>\n        <li className={styles.item}>\n          <NavLink activeClassName={styles.activeLink} to='/music'>Music</NavLink>\n        </li>\n        <li className={styles.item}>\n          <NavLink activeClassName={styles.activeLink} to='/settings'>Settings</NavLink>\n        </li>\n      </ul>\n    </nav>\n  );\n}\n\nexport default Nav;","import React from 'react';\n\nfunction Photos() {\n  return (\n    <div>\n      Photos\n    </div>\n  );\n}\n\nexport default Photos;\n","import React from 'react';\n\nfunction Music() {\n  return (\n    <div>\n      Music\n    </div>\n  );\n}\n\nexport default Music;\n","import React from 'react';\n\nfunction Settings() {\n  return (\n    <div>\n      Settings\n    </div>\n  );\n}\n\nexport default Settings;\n","import { UsersType } from './../types/types';\nimport { usersAPI } from '../api/api'\nimport {AppStateType} from \"./reduxStore\";\nimport {Dispatch} from \"redux\";\n\nconst FOLLOW = 'users/FOLLOW';\nconst UNFOLLOW = 'users/UNFOLLOW';\nconst SET_USERS = 'users/SET_USERS';\nconst SET_CURRENT_PAGE = 'users/SET_CURRENT_PAGE';\nconst SET_TOTAL_USERS_COUNT = 'users/SET_TOTAL_USERS_COUNT';\nconst TOGGLE_IS_FETCHING = 'users/TOGGLE_IS_FETCHING';\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'users/TOGGLE_IS_FOLLOWING';\n\nlet initialState = {\n  users: [] as Array<UsersType>,\n  pageSize: 10,\n  totalUsersCount: 0,\n  currentPage: 1,\n  isFetching: true,\n  followingInProgress: [] as Array<number> // array of users ids\n}\n\ntype InitialStateType = typeof initialState\n\nconst usersReducer = (state = initialState, action: ActionsTypes): InitialStateType => {\n\n  switch (action.type) {\n    case FOLLOW:\n      return {\n        ...state,\n        users: state.users.map(u => {\n          if (u.id === action.userId) {\n            return { ...u, followed: true }\n          }\n          return u;\n        }\n        )\n      }\n    case UNFOLLOW:\n      return {\n        ...state,\n        users: state.users.map(u => {\n          if (u.id === action.userId) {\n            return { ...u, followed: false }\n          }\n          return u;\n        }\n        )\n      }\n    case SET_USERS:\n      return { ...state, users: action.users }\n    case SET_CURRENT_PAGE:\n      return { ...state, currentPage: action.currentPage }\n    case SET_TOTAL_USERS_COUNT:\n      return { ...state, totalUsersCount: action.totalUsersCount }\n    case TOGGLE_IS_FETCHING:\n      return { ...state, isFetching: action.isFetching }\n    case TOGGLE_IS_FOLLOWING_PROGRESS:\n      return {\n        ...state,\n        followingInProgress: action.isFetching\n          ? [...state.followingInProgress, action.userId]\n          : state.followingInProgress.filter(id => id !== action.userId)\n      }\n    default:\n      return state\n  }\n}\n\ntype ActionsTypes = FollowSuccesActionType | UnollowSuccesActionType | SetUsersActionType |\n    SetCurrentPageActionType | SetTotalUsersCountActionType | ToggleIsFetchingActionType |\n    ToggleIsFollofingActionType\n\ntype FollowSuccesActionType = {\n  type: typeof FOLLOW\n  userId: number\n}\n\ntype UnollowSuccesActionType = {\n  type: typeof UNFOLLOW\n  userId: number\n}\n\ntype SetUsersActionType = {\n  type: typeof SET_USERS\n  users: Array<UsersType>\n}\n\ntype SetCurrentPageActionType = {\n  type: typeof SET_CURRENT_PAGE\n  currentPage: number\n}\n\ntype SetTotalUsersCountActionType = {\n  type: typeof SET_TOTAL_USERS_COUNT\n  totalUsersCount: number\n}\n\ntype ToggleIsFetchingActionType = {\n  type: typeof TOGGLE_IS_FETCHING\n  isFetching: boolean\n}\n\ntype ToggleIsFollofingActionType = {\n  type: typeof TOGGLE_IS_FOLLOWING_PROGRESS\n  isFetching: boolean\n  userId: number\n}\n\nexport const followSuccess = (userId: number): FollowSuccesActionType => ({ type: FOLLOW, userId })\nexport const unfollowSuccess = (userId: number): UnollowSuccesActionType => ({ type: UNFOLLOW, userId })\nexport const setUsers = (users: Array<UsersType>): SetUsersActionType => ({ type: SET_USERS, users })\nexport const setCurrentPage = (currentPage: number): SetCurrentPageActionType => ({ type: SET_CURRENT_PAGE, currentPage })\nexport const setTotalUsersCount = (totalUsersCount: number): SetTotalUsersCountActionType => ({ type: SET_TOTAL_USERS_COUNT, totalUsersCount })\nexport const toggleIsFetching = (isFetching: boolean): ToggleIsFetchingActionType => ({ type: TOGGLE_IS_FETCHING, isFetching })\nexport const toggleIsFollowing = (isFetching: boolean, userId: number): ToggleIsFollofingActionType => ({ type: TOGGLE_IS_FOLLOWING_PROGRESS, isFetching, userId })\n\ntype DispatchType = Dispatch<ActionsTypes>\ntype GetStateType = () => AppStateType\n\nexport const requestUsers = (page: number, pageSize: number) => {\n  return async (dispatch: DispatchType, getState: GetStateType ) => {\n    dispatch(toggleIsFetching(true))\n    dispatch(setCurrentPage(page))\n\n    const data = await usersAPI.getUsers(page, pageSize)\n    dispatch(toggleIsFetching(false))\n    dispatch(setUsers(data.items))\n    dispatch(setTotalUsersCount(data.totalCount))\n  }\n}\n\nexport const follow = (userId: number) => {\n  return async (dispatch: DispatchType, getState: GetStateType) => {\n    dispatch(toggleIsFollowing(true, userId))\n    const response = await usersAPI.follow(userId)\n    if (response.data.resultCode === 0) {\n      dispatch(followSuccess(userId))\n    }\n    dispatch(toggleIsFollowing(false, userId))\n  }\n}\n\nexport const unfollow = (userId: number) => {\n  return async (dispatch: DispatchType, getState: GetStateType) => {\n    dispatch(toggleIsFollowing(true, userId))\n    const response = await usersAPI.unfollow(userId)\n    if (response.data.resultCode === 0) {\n      dispatch(unfollowSuccess(userId))\n    }\n    dispatch(toggleIsFollowing(false, userId))\n  }\n}\n\nexport default usersReducer","import React, { useState } from 'react';\nimport styles from './Pagination.module.css'\nimport cn from 'classnames'\n\ntype PropsType = {\n    pageSize: number\n    totalItemsCount: number\n    currentPage: number\n    onPageChange: (pageNumber: number) => void\n    portionSize?: number\n}\n\nconst Pagination: React.FC<PropsType> = ({ pageSize, totalItemsCount,\n    currentPage, onPageChange, portionSize = 10 }) => {\n\n    let pagesCount = Math.ceil(totalItemsCount / pageSize)\n    let pages: Array<number> = [] \n    for (let i = 1; i <= pagesCount; i++) {\n        pages.push(i)\n    }\n\n    let portionCount = Math.ceil(pagesCount / portionSize);\n    let [portionNumber, setPortionNumber] = useState(1);\n    let leftPortionPageNumber = (portionNumber - 1) * (portionSize + 1);\n    let rightPortionPageNumber = portionNumber * portionSize;\n\n\n    return <div className={styles.paginator}>\n        {portionNumber > 1 &&\n            <button className={styles.portionButton} onClick={() => { setPortionNumber(portionNumber - 1) }}>PREV</button>}\n\n        {pages\n            .filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber)\n            .map((p) => {\n                return <span className={cn({\n                    [styles.selectedPage]: currentPage === p\n                }, styles.pageNumber)}\n                    key={p}\n                    onClick={() => {\n                        onPageChange(p);\n                    }}>{p}</span>\n            })}\n        {portionCount > portionNumber &&\n            <button className={styles.portionButton} onClick={() => { setPortionNumber(portionNumber + 1) }}>NEXT</button>}\n\n\n    </div>\n}\n\nexport default Pagination;","import React from 'react';\nimport styles from './Users.module.css'\nimport userPhoto from '../../assets/mrrobot.png'\nimport { NavLink } from 'react-router-dom';\nimport Pagination from './Pagination';\nimport { UsersType } from '../../types/types';\nimport {Button} from \"antd\";\n\ntype PropsType = {\n    pageSize: number\n    totalUsersCount: number\n    currentPage: number\n    onPageChange: (pageNumber: number) => void\n    users: Array<UsersType>\n    followingInProgress: Array<number>\n    follow: (userId: number) => void\n    unfollow: (userId: number) => void\n}\n\nconst Users: React.FC<PropsType> = ({ currentPage, onPageChange, totalUsersCount, pageSize, users, ...props }) => {\n\n    return (<div className={styles.usersPage}>\n        <Pagination\n            currentPage={currentPage}\n            onPageChange={onPageChange}\n            totalItemsCount={totalUsersCount}\n            pageSize={pageSize}\n        />\n        {users.map(u =>\n            <div className={styles.userInList} key={u.id}>\n                <span>\n                    <div className={styles.userName}>{u.name}</div>\n                    <span>\n                        <div>Country: </div>\n                        <div>City: </div>\n                        {/* <div>u.location.country</div>\n                        <div>u.location.city</div>  */}\n                    </span>\n                    <div >\n                        <NavLink to={`/profile/${u.id}`}>\n                            <img className={styles.userPic} alt={'small userpic'} src={u.photos.small != null ? u.photos.small : userPhoto} />\n                        </NavLink>\n                    </div>\n                    <div>\n                        {// @ts-ignore\n                            u.followed\n                            ? <Button type={\"primary\"} size={'small'} danger\n                                      //className={styles.unfollowButton}\n                                      disabled={props.followingInProgress.some(id => id === u.id)} onClick={() => {\n                                props.unfollow(u.id)\n                            }}>unfollow</Button>\n\n                            : <Button type={\"primary\"} size={'small'}\n                                      //className={styles.followButton}\n                                      disabled={props.followingInProgress.some(id => id === u.id)} onClick={() => {\n                                props.follow(u.id)\n                            }}>follow <b> {u.name}</b></Button>\n                        }\n                    </div>\n                </span>\n                <span>\n                    <span>\n                        <div>{u.status}</div>\n                    </span>\n                </span>\n            </div>)}\n    </div>\n    )\n\n}\n\nexport default Users;","import {createSelector} from 'reselect'\nimport {AppStateType} from \"./reduxStore\";\n\nconst getUsersSelector = (state: AppStateType) => {\n    return state.usersPage.users\n}\n\nexport const getUsers = createSelector(getUsersSelector, \n    (users) => {\n   // @ts-ignore\n        return users.filter(u => true)\n})\n\nexport const getPageSize = (state: AppStateType) => {\n    return state.usersPage.pageSize\n}\n\nexport const getTotalUsersCount = (state: AppStateType) => {\n    return state.usersPage.totalUsersCount\n}\n\nexport const getCurrentPage = (state: AppStateType) => {\n    return state.usersPage.currentPage\n}\n\nexport const getIsFetching = (state: AppStateType) => {\n    return state.usersPage.isFetching\n}\n\nexport const getFollowingInProgress = (state: AppStateType) => {\n    return state.usersPage.followingInProgress\n}\n\nexport const getFollow = (state: AppStateType) => {\n    return state.usersPage.follow\n}\n\nexport const getUnfollow = (state: AppStateType) => {\n    return state.usersPage.unfollow\n}\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { follow, unfollow, requestUsers, setCurrentPage } from '../../redux/usersReducer';\nimport Users from './Users';\nimport Preloader from '../common/Preloader/Preloader'\n\nimport { compose } from 'redux';\nimport { getUsers, getPageSize, getTotalUsersCount, getCurrentPage, getIsFetching, getFollowingInProgress } from '../../redux/userSelectors';\nimport { UsersType } from '../../types/types';\nimport { AppStateType } from '../../redux/reduxStore';\n\ntype MapStatePropsType = {\n    currentPage: number\n    pageSize: number\n    isFetching: boolean\n    users: Array<UsersType>\n    totalUsersCount: number\n    followingInProgress: Array<number>\n}\n\ntype MapDispatchPropsType = {\n    follow: (userId: number) => void\n    unfollow: (userId: number) => void\n    getUsers: (page: number, pageSize: number) => void\n    setCurrentPage: (currentPage: number) => void\n}\n\ntype OwnPropsType = {\n    pageTitle: string\n}\n\ntype PropsType = MapStatePropsType & MapDispatchPropsType & OwnPropsType\n\nclass UsersContainer extends React.Component<PropsType> {\n\n    componentDidMount() {\n        const { currentPage, pageSize } = this.props\n        this.props.getUsers(currentPage, pageSize)\n    }\n\n    onPageChange = (pageNumber: number) => {\n        const { pageSize } = this.props\n        this.props.getUsers(pageNumber, pageSize)\n    }\n\n    render() {\n        return <>\n            <h2>{this.props.pageTitle}</h2>\n            {this.props.isFetching ? <Preloader /> : null}\n            <Users\n                currentPage={this.props.currentPage}\n                onPageChange={this.onPageChange}\n                users={this.props.users}\n                follow={this.props.follow}\n                unfollow={this.props.unfollow}\n                followingInProgress={this.props.followingInProgress}\n                // @ts-ignore\n                isAuth={this.props.isAuth}\n                totalUsersCount={this.props.totalUsersCount}\n                pageSize={this.props.pageSize}\n\n            />\n        </>\n    }\n}\n\nlet mapStateToProps = (state: AppStateType): MapStatePropsType => {\n    return {\n        users: getUsers(state),\n        pageSize: getPageSize(state),\n        totalUsersCount: getTotalUsersCount(state),\n        currentPage: getCurrentPage(state),\n        isFetching: getIsFetching(state),\n        followingInProgress: getFollowingInProgress(state)\n    }\n}\n\nexport default compose( //   <TStateProps = {}, TDispatchProps = {}, TOwnProps = {}, State = DefaultRootState>\n    connect<MapStatePropsType, MapDispatchPropsType, OwnPropsType, AppStateType>(mapStateToProps,\n        { follow, unfollow, setCurrentPage, getUsers: requestUsers  })\n)(UsersContainer)\n\n// let mapDispatchToProps = (dispatch) => {\n\n//     return {\n//         follow: (userId) => {\n//             dispatch(followAC(userId));\n//         },\n//         unfollow: (userId) => {\n//             dispatch(unfollowAC(userId));\n//         },\n//         setUsers: (users) => {\n//             dispatch(setUsersAC(users));\n//         },\n//         setCurrentPage: (currentPage) => {\n//             dispatch(setCurrentPageAC(currentPage))\n//         },\n//         setTotalUsersCount: (totalCount) => {\n//             dispatch(setTotalUsersCountAC(totalCount))\n//         },\n//         toggleIsFetching: (isFetching) => {\n//             dispatch(toggleIsFetchingAC(isFetching))\n//         }\n//     }\n","import React from 'react';\nimport styles from './Header.module.css';\nimport { NavLink, Redirect } from 'react-router-dom';\nimport logo from '../../assets/eye.png'\n\nfunction Header(props) {\n    return (\n        <header className={styles.header}>\n            <img src={logo} alt={'logo'} />\n            <div className={styles.login}>\n                {props.isAuth\n                    ? <div> {props.login} <button className={styles.logoutButton}\n                        onClick={props.logout}>Logout</button></div>\n                    : <NavLink to={'/login'}>\n                        L O G I N\n                        <Redirect to={'/login'} />\n                    </NavLink>}\n            </div>\n\n        </header>\n    );\n}\n\nexport default Header;","import {authAPI, ResultCodeEnum, securityAPI} from '../api/api'\nimport {stopSubmit} from 'redux-form';\n\nconst SET_USER_DATA = 'auth/SET_USER_DATA';\nconst GET_CAPTCHA_URL_SUCCESS = 'auth/GET_CAPTCHA_URL_SUCCESS';\n\nlet initialState = {\n  id: null as number | null,\n  login: null as string | null,\n  email: null as string | null,\n  isAuth: false,\n  captchaUrl: null as string | null // if null captcha is not required\n}\n\ntype InitialStateType = typeof initialState\n\nconst authReducer = (state = initialState, action: any): InitialStateType => {\n\n  switch (action.type) {\n    case SET_USER_DATA:\n    case GET_CAPTCHA_URL_SUCCESS:\n      return {\n        ...state,\n        ...action.payload\n      }\n    default:\n      return state\n  }\n}\n\ntype SetAuthUserDataActionPayloadType = {\n  id: number | null\n  login: string | null\n  email: string | null\n  isAuth: boolean\n}\ntype SetAuthUserDataActionType = {\n  type: typeof SET_USER_DATA\n  payload: SetAuthUserDataActionPayloadType\n}\n\nexport const setAuthUserData = (id: number | null, login: string | null, email: string | null, isAuth: boolean): SetAuthUserDataActionType => ({\n  type: SET_USER_DATA, payload: { id, login, email, isAuth }\n})\n\ntype GetCaptchaUrlSuccessActionType = {\n  type: typeof GET_CAPTCHA_URL_SUCCESS\n  payload: { captchaUrl: string }\n}\n\nexport const getCaptchaUrlSuccess = (captchaUrl: string): GetCaptchaUrlSuccessActionType => ({\n  type: GET_CAPTCHA_URL_SUCCESS, payload: { captchaUrl }\n})\n\n\nexport const getAuthUserData = () => async (dispatch: any) => {\n  const meData = await authAPI.me()\n  const { id, login, email } = meData.data\n  if (meData.resultCode === ResultCodeEnum.Success) {\n    dispatch(setAuthUserData(id, login, email, true))\n  }\n}\n\nexport const login = (email: string, password: string, rememberMe: boolean, captcha: string) => async (dispatch: any) => {\n  const loginData = await authAPI.login(email, password, rememberMe, captcha)\n  if (loginData.resultCode === ResultCodeEnum.Success) {\n    // success get auth data\n    dispatch(getAuthUserData())\n  } else {\n    if (loginData.resultCode === ResultCodeEnum.CaptchaIsRequired) {\n      dispatch(getCaptchaUrl())\n    }\n    let messaage = loginData.messages.length > 0 ? loginData.messages[0] : 'Some error!'\n    dispatch(stopSubmit('login', { _error: messaage }))\n  }\n}\n\nexport const logout = () => async (dispatch: any) => {\n  const response = await authAPI.logout()\n  if (response.data.resultCode === 0) {\n    dispatch(setAuthUserData(null, null, null, false))\n  }\n}\n\nexport const getCaptchaUrl = () => async (dispatch: any) => {\n  const response = await securityAPI.getCaptchaUrl()\n  const captchaUrl = response.data.url\n  dispatch(getCaptchaUrlSuccess(captchaUrl))\n}\n\nexport default authReducer","import React from 'react';\nimport Header from './Header';\nimport { connect } from 'react-redux';\nimport { logout } from '../../redux/authReducer';\n\nclass HeaderComponent extends React.Component {\n    render() {\n        return (\n            <Header {...this.props} />\n        );\n    }\n}\n\nlet mapStateToProps = (state) => ({\n    isAuth: state.auth.isAuth,\n    login: state.auth.login\n})\n\nexport default connect(mapStateToProps, { logout })(HeaderComponent);","import React from 'react';\nimport {Field, InjectedFormProps, reduxForm} from 'redux-form'\nimport { Input } from '../common/FormsControls/FormsControls';\nimport { required } from '../../validators/validators';\nimport { connect } from 'react-redux';\nimport { login } from '../../redux/authReducer';\nimport { Redirect } from 'react-router-dom';\nimport styles from '../common/FormsControls/FormsControls.module.css'\nimport loginStyles from './Login.module.css'\nimport {AppStateType} from \"../../redux/reduxStore\";\n\ntype LoginOwnPropsType = {\n    captchaUrl: string | null\n}\n\nconst LoginForm: React.FC<InjectedFormProps<LoginFormValuesType, LoginOwnPropsType> & LoginOwnPropsType> = ({ handleSubmit, error, captchaUrl }) => {\n    return (\n        <form onSubmit={handleSubmit}>\n            <div>\n                <Field placeholder={'Email'} name={'email'} component={Input} validate={[required]} />\n            </div>\n            <div>\n                <Field placeholder={'Password'} name={'password'} component={Input} validate={[required]} type={'password'} />\n            </div>\n            <div>\n            Remember me <Field type={'checkbox'} name={'rememberMe'} component={Input} /> \n            </div>\n            {captchaUrl && <img src={captchaUrl} alt={'captcha'} />}\n\n            {captchaUrl && <Field placeholder={'Enter the symbols from image'} name={'captcha'}\n                component={Input} validate={[required]} />}\n            {error && <div className={styles.formSummaryError}>\n                {error}\n            </div>}\n            <div>\n                <button className={styles.loginButton}>Login</button>\n            </div>\n        </form>\n    )\n}\n\nconst LoginReduxForm = reduxForm<LoginFormValuesType, LoginOwnPropsType>({ form: 'login' })(LoginForm)\n\ntype MapStateToPropsType = {\n    isAuth: boolean\n    captchaUrl: string | null\n}\n\ntype MapDispatchToPropsType = {\n    login: (email: string, password: string, rememberMe: boolean, captcha: string) => void\n}\n\ntype LoginFormValuesType = {\n    email: string\n    password: string\n    rememberMe: boolean\n    captcha: string\n}\nconst Login: React.FC<MapStateToPropsType & MapDispatchToPropsType> = (props) => {\n    const onSubmit = (formData: any) => {\n        props.login(formData.email, formData.password, formData.rememberMe, formData.captcha)\n    }\n\n    if (props.isAuth) {\n        return <Redirect to={'/profile'} />\n    }\n\n    return <div className={loginStyles.loginPage}>\n        <h1>Login page</h1>\n        <p>Please enter your login and password</p>\n        <LoginReduxForm onSubmit={onSubmit} captchaUrl={props.captchaUrl} />\n    </div>\n}\n\nconst mapStateToProps = (state: AppStateType): MapStateToPropsType => ({\n    isAuth: state.auth.isAuth,\n    captchaUrl: state.auth.captchaUrl\n})\n\nexport default connect(mapStateToProps, { login })(Login)","import { getAuthUserData } from \"./authReducer\";\n\n\nconst INITIALIZED_SUCCESS = 'app/INITIALIZED_SUCCESS';\n\ntype InitialStateType = {\n  initialized: boolean\n}\n\nlet initialState: InitialStateType = {\n  initialized: false\n}\n\nconst appReducer = (state = initialState, action: any): InitialStateType => {\n\n  switch (action.type) {\n    case INITIALIZED_SUCCESS:\n      return {\n        ...state,\n        initialized: true\n      }\n    default:\n      return state\n  }\n}\n\nexport const initializedSuccess = (): InitializedSuccessActionType  => ({ type: INITIALIZED_SUCCESS })\n\ntype InitializedSuccessActionType = {\n  type: typeof INITIALIZED_SUCCESS\n}\n\nexport const initializeApp = () => (dispatch: any) => {\n  let promise = dispatch(getAuthUserData())\n  promise.then(() => {\n    dispatch(initializedSuccess())\n  })\n}\n\nexport default appReducer\n","import React from \"react\";\n\nconst useState = React.useState\nconst useEffect = React.useEffect\n\nexport const Time = () =>  {\n    const [theTime, setTheTime] = useState(new Date().toLocaleString())\n\n    useEffect(() => {\n        const interval = setInterval(() => setTheTime(new Date().toLocaleString()), 1000)\n\n        return () => clearInterval(interval)\n    }, [])\n\n    return <p>Now time is {theTime}.</p>\n}","import React from 'react';\nimport styles from './Footer.module.css';\nimport {Time} from \"../common/Time/Time\";\n\nconst Footer = (props) => {\n    return (\n        <div className={styles.footer}>\n            :\\ Pet Project by Vladimir L.\n            <Time/>\n        </div>\n    );\n}\n\nexport default Footer;","import React from 'react';\nimport styles from './Sidebar.module.css';\n\n\nconst Sidebar = () => {\n  return (\n   <div className={styles.sidebar}></div>\n  )\n}\n\nexport default Sidebar;","import React from 'react';\nimport {Result, Button} from \"antd\";\n\nexport const page404 = () => {\n    return(\n    <Result\n        status=\"404\"\n        title=\"404\"\n        subTitle=\"Sorry, the page you visited does not exist.\"\n        extra={<Button type=\"primary\" href={\"/\"}>Back Profile</Button>}\n    />)\n}\n","import React, {Suspense} from 'react';\nimport './App.css';\nimport Nav from './components/Nav/Nav';\nimport Photos from './components/Photos/Photos';\nimport Music from './components/Music/Music';\nimport Settings from './components/Settings/Settings';\nimport {HashRouter, Route, Switch, Redirect, NavLink, Link} from 'react-router-dom';\nimport UsersContainer from './components/Users/UsersContainer';\nimport HeaderComponent from './components/Header/HeaderComponent';\nimport Login from './components/Login/Login';\nimport {connect} from 'react-redux';\nimport {initializeApp} from './redux/appReducer';\nimport Preloader from './components/common/Preloader/Preloader';\nimport Footer from './components/Footer/Footer';\nimport Sidebar from './components/Sidebar/Sideber';\nimport 'antd/dist/antd.css';\nimport {page404} from \"./components/common/404/page404\";\n// import ProfileContainer from './components/Profile/ProfileContainer';\n// import DialogsContainer from './components/Dialogs/DialogsContainer';\n\n\n//import {Layout, Menu, Breadcrumb} from 'antd';\n// import {UserOutlined, LaptopOutlined, NotificationOutlined} from '@ant-design/icons';\n// import styles from \"./components/Nav/Nav.module.css\";\n\n// const {SubMenu} = Menu;\n// const {Header, Content, Footer, Sider} = Layout;\n\nconst DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer'))\nconst ProfileContainer = React.lazy(() => import('./components/Profile/ProfileContainer'))\n\nclass App extends React.Component {\n\n    componentDidMount() {\n        this.props.initializeApp()\n    }\n\n    componentWillUnmount() {\n    }\n\n    render() {\n        if (!this.props.initialized) {\n            return <Preloader/>\n        }\n        // HashRouter used for gh pages. Please use BrouserRouter\n        return (\n            <HashRouter>\n              <div className='app-wrapper'>\n                <HeaderComponent />\n                <Nav />\n                <div className='app-wrapper-content'>\n                  <Switch>\n                    <Route exact path='/'\n                      render={() => <Suspense fallback={<div>Загрузка...</div>}>\n                        <Redirect to={'/profile'} />\n                      </Suspense>}\n                    />\n                    <Route\n                      path='/dialogs'\n                      render={() => <Suspense fallback={<div>Загрузка...</div>}>\n                        <DialogsContainer />\n                      </Suspense>}\n                    />\n                    <Route path='/profile/:userId?'\n                      render={() => <Suspense fallback={<div>Загрузка...</div>}>\n                        <ProfileContainer />\n                      </Suspense>}\n                    />\n                    <Route path='/users'\n                      render={() => <UsersContainer\n                      />}\n                    />\n                    <Route path='/login'\n                      render={() => <Login\n                      />}\n                    />\n                    <Route path='/photos' component={Photos} />\n                    <Route path='/music' component={Music} />\n                    <Route path='/settings' component={Settings} />\n                    <Route path='*' component={page404}/>\n                  </Switch>\n                </div>\n                <Sidebar/>\n                <Footer/>\n              </div>\n            </HashRouter>\n\n            // <HashRouter>\n            //   <Layout>\n            //     <Header className=\"header\">\n            //       <div className=\"logo\"/>\n            //       <Menu theme=\"dark\" mode=\"horizontal\" defaultSelectedKeys={['2']}>\n            //         <Menu.Item key=\"1\">\n            //           <Link to='/users'>Users</Link>\n            //         </Menu.Item>\n            //       </Menu>\n            //     </Header>\n            //     <Content style={{padding: '0 50px'}}>\n            //       <Breadcrumb style={{margin: '16px 0'}}>\n            //         <Breadcrumb.Item>Home</Breadcrumb.Item>\n            //         <Breadcrumb.Item>List</Breadcrumb.Item>\n            //         <Breadcrumb.Item>Pet project</Breadcrumb.Item>\n            //       </Breadcrumb>\n            //       <Layout className=\"site-layout-background\" style={{padding: '24px 0'}}>\n            //         <Sider className=\"site-layout-background\" width={200}>\n            //           <Menu\n            //               mode=\"inline\"\n            //               // defaultSelectedKeys={['1']}\n            //               defaultOpenKeys={['sub1']}\n            //               style={{height: '100%'}}\n            //           >\n            //             <SubMenu key=\"sub1\" icon={<UserOutlined/>} title=\"My profile\">\n            //               <Menu.Item key=\"1\">\n            //                 <Link to='/profile'>Profile</Link>\n            //               </Menu.Item>\n            //               <Menu.Item key=\"2\">\n            //                 <Link to='/users'>Users</Link>\n            //               </Menu.Item>\n            //               <Menu.Item key=\"3\">\n            //                 <Link to='/dialogs'>Messages</Link>\n            //\n            //               </Menu.Item>\n            //               <Menu.Item key=\"4\">option4</Menu.Item>\n            //             </SubMenu>\n            //             <SubMenu key=\"sub2\" icon={<LaptopOutlined/>} title=\"subnav 2\">\n            //               <Menu.Item key=\"5\">option5</Menu.Item>\n            //               <Menu.Item key=\"6\">option6</Menu.Item>\n            //               <Menu.Item key=\"7\">option7</Menu.Item>\n            //               <Menu.Item key=\"8\">option8</Menu.Item>\n            //             </SubMenu>\n            //             <SubMenu key=\"sub3\" icon={<NotificationOutlined/>} title=\"subnav 3\">\n            //               <Menu.Item key=\"9\">option9</Menu.Item>\n            //               <Menu.Item key=\"10\">option10</Menu.Item>\n            //               <Menu.Item key=\"11\">option11</Menu.Item>\n            //               <Menu.Item key=\"12\">option12</Menu.Item>\n            //             </SubMenu>\n            //           </Menu>\n            //         </Sider>\n            //         <Content style={{padding: '0 24px', minHeight: 280}}>\n            //           <Switch>\n            //             <Route exact path='/'\n            //                    render={() => <Suspense fallback={<div>Загрузка...</div>}>\n            //                      <Redirect to={'/profile'}/>\n            //                    </Suspense>}\n            //             />\n            //             <Route\n            //                 path='/dialogs'\n            //                 render={() => <Suspense fallback={<div>Загрузка...</div>}>\n            //                   <DialogsContainer/>\n            //                 </Suspense>}\n            //             />\n            //             <Route path='/profile/:userId?'\n            //                    render={() => <Suspense fallback={<div>Загрузка...</div>}>\n            //                      <ProfileContainer/>\n            //                    </Suspense>}\n            //             />\n            //             <Route path='/users'\n            //                    render={() => <UsersContainer pageTitle={'All users'}\n            //                    />}\n            //             />\n            //             <Route path='/login'\n            //                    render={() => <Login\n            //                    />}\n            //             />\n            //             <Route path='/photos' component={Photos}/>\n            //             <Route path='/music' component={Music}/>\n            //             <Route path='/settings' component={Settings}/>\n            //             <Route path='*'\n            //                    render={() => <div>404 NOT FOUND</div>}\n            //             />\n            //           </Switch>\n            //         </Content>\n            //       </Layout>\n            //     </Content>\n            //     <Footer style={{textAlign: 'center'}}>Ant Design ©2018 Created by Ant UED</Footer>\n            //   </Layout>\n            // </HashRouter>\n\n        );\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    initialized: state.app.initialized\n})\n\nexport default connect(mapStateToProps, {initializeApp})(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import profileReducer from './profileReducer'\nimport dialogsReducer from './dialogsReducer'\nimport usersReducer from './usersReducer'\nimport authReducer from './authReducer'\nimport appReducer from './appReducer'\nimport { reducer as formReducer } from 'redux-form'\n\nimport thunkMiddleware from 'redux-thunk'\n\nconst { createStore, combineReducers, applyMiddleware, compose } = require(\"redux\")\n\nlet rootReducer = combineReducers({\n    profilePage: profileReducer,\n    dialogsPage: dialogsReducer,\n    usersPage: usersReducer,\n    auth: authReducer,\n    form: formReducer,\n    app: appReducer\n})\n\ntype RootReducerType = typeof rootReducer // (global state: AppStateType) => AppStateType\nexport type AppStateType = ReturnType<RootReducerType>\n\n// @ts-ignore\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\n\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunkMiddleware)))\n// @ts-ignore\nwindow._store_ = store\n\nexport default store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport store from './redux/reduxStore';\nimport { Provider } from 'react-redux';\n\n\n  ReactDOM.render(\n\n    <React.StrictMode>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n  );\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__3oI2W\",\"formSummaryError\":\"FormsControls_formSummaryError__1F2-S\",\"saveButton\":\"FormsControls_saveButton__3VGCw\",\"loginButton\":\"FormsControls_loginButton__3wK0r\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginator\":\"Pagination_paginator__1TXwA\",\"pageNumber\":\"Pagination_pageNumber__1r7yr\",\"selectedPage\":\"Pagination_selectedPage__zdDHb\",\"portionButton\":\"Pagination_portionButton__12LKm\"};","import React from 'react'\nimport styles from './FormsControls.module.css'\nimport {WrappedFieldProps} from \"redux-form\";\n\ntype TextareaInputPropsType = {\n    input: WrappedFieldProps\n    meta: {\n        touched: boolean\n        error: string\n    }\n}\n\nexport const Textarea: React.FC<TextareaInputPropsType> = ({ input, meta: { touched, error }, ...props }) => {\n    const hasError = touched && error\n\n    return (\n        <div className={(hasError ? styles.formControl : '')}>\n            <textarea {...input} {...props} />\n            <div>\n                {hasError && <span>{error}</span>}\n            </div>\n        </div>\n    )\n}\n\nexport const Input: React.FC<TextareaInputPropsType> = ({ input, meta: { touched, error }, ...props }) => {\n    const hasError = touched && error\n\n    return (\n        <div className={(hasError ? styles.formControl : '')}>\n            <input {...input} {...props} />\n            <div>\n                {hasError && <span>{error}</span>}\n            </div>\n        </div>\n    )\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"usersPage\":\"Users_usersPage__3xdAn\",\"userPic\":\"Users_userPic__1_BqH\",\"selectedPage\":\"Users_selectedPage__J63sh\",\"userInList\":\"Users_userInList__OVJXd\",\"userName\":\"Users_userName__1mt5V\",\"unfollowButton\":\"Users_unfollowButton__3QsTy\",\"followButton\":\"Users_followButton__2xwHU\"};","import React from 'react'\nimport { Spin } from 'antd';\n\nconst Preloader = () => {\n    return (\n        <Spin size={\"large\"}/>\n    )\n}\n\nexport default Preloader","export type FieldValidatorType = (value: string) => string | undefined\n\nexport const required: FieldValidatorType = (value) => {\n    if (value) return undefined\n    return 'Required field'\n}\n\nexport const maxLengthCreator = (maxLength: number): FieldValidatorType => (value) => {\n    if (value.length > maxLength) return `max length is ${maxLength} symbols`\n    return undefined\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1VCKf\",\"login\":\"Header_login__3V3Qa\",\"logoutButton\":\"Header_logoutButton__21mWM\"};"],"sourceRoot":""}