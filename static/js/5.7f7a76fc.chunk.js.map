{"version":3,"sources":["Pages/Chat/ChatPage.tsx"],"names":["Chat","useState","wsChannel","setWsChannel","useEffect","createChanel","ws","WebSocket","addEventListener","ChatMessages","ChatMessageForm","messages","setMessages","e","newMessages","JSON","parse","data","prevMessages","style","height","overflowY","map","m","index","ChatMessage","key","message","width","src","photo","userName","setMessage","readyStatus","setReadyStatus","onChange","currentTarget","value","disabled","onClick","send","ChatPage"],"mappings":"yJAiBMA,EAAiB,WAAO,IAAD,EACSC,mBAA2B,MADpC,mBAClBC,EADkB,KACPC,EADO,KAczB,OAXAC,qBAAU,YACN,SAASC,IACL,IAAIC,EAAK,IAAIC,UAAU,gEACvBD,EAAGE,iBAAiB,SAAS,WACzBH,OAEJF,EAAaG,GAEjBD,KACD,IAGC,6BACI,kBAACI,EAAD,CAAcH,GAAIJ,IAClB,kBAACQ,EAAD,CAAiBJ,GAAIJ,MAK3BO,EAAmD,SAAC,GAAU,IAATH,EAAQ,EAARA,GAAQ,EAC/BL,mBAA4B,IADG,mBACxDU,EADwD,KAC9CC,EAD8C,KAU/D,OAPAR,qBAAU,WACJ,OAAFE,QAAE,IAAFA,KAAIE,iBAAiB,WAAW,SAACK,GAC7B,IAAIC,EAAcC,KAAKC,MAAMH,EAAEI,MAC/BL,GAAY,SAACM,GAAD,4BAAsBA,GAAtB,YAAuCJ,YAExD,CAACR,IAGA,yBAAKa,MAAO,CAACC,OAAQ,IAAKC,UAAW,SAChCV,EAASW,KAAI,SAACC,EAAGC,GAAJ,OAAc,kBAACC,EAAD,CAAaC,IAAKF,EAAOG,QAASJ,SAKpEE,EAAsD,SAAC,GAAe,IAAdE,EAAa,EAAbA,QAC1D,OACI,6BACI,yBAAKR,MAAO,CAACS,MAAO,IAAKC,IAAKF,EAAQG,QAAQ,2BAAIH,EAAQI,UAC1D,6BAAMJ,EAAQA,SACd,+BAKNjB,EAAsD,SAAC,GAAU,IAATJ,EAAQ,EAARA,GAAQ,EACpCL,mBAAS,IAD2B,mBAC3D0B,EAD2D,KAClDK,EADkD,OAE5B/B,mBAA8B,WAFF,mBAE3DgC,EAF2D,KAE9CC,EAF8C,KAIlE9B,qBAAU,WACJ,OAAFE,QAAE,IAAFA,KAAIE,iBAAiB,QAAQ,WACzB0B,EAAe,cAEpB,CAAC5B,IAUJ,OACI,6BACI,6BACI,8BAAU6B,SAAU,SAACtB,GAAD,OAAOmB,EAAWnB,EAAEuB,cAAcC,QAC5CA,MAAOV,KAErB,6BACI,4BAAQW,SAAiB,OAAPhC,GAA+B,UAAhB2B,EAAyBM,QAflD,WACXZ,IAGH,OAAFrB,QAAE,IAAFA,KAAIkC,KAAKb,GACTK,EAAW,OAUH,WAMDS,UAxFY,WACvB,OACI,6BACI,kBAACzC,EAAD","file":"static/js/5.7f7a76fc.chunk.js","sourcesContent":["import React, {useEffect, useState} from \"react\";\n\nexport type ChatMessageType = {\n    message: string\n    photo: string\n    userId: number\n    userName: string\n}\n\nconst ChatPage: React.FC = () => {\n    return (\n        <div>\n            <Chat/>\n        </div>\n    )\n}\n\nconst Chat: React.FC = () => {\n    const [wsChannel, setWsChannel] = useState<WebSocket | null>(null)\n\n    useEffect(() => {\n        function createChanel() {\n            let ws = new WebSocket('wss://social-network.samuraijs.com/handlers/ChatHandler.ashx')\n            ws.addEventListener('close', () => {\n                createChanel()\n            })\n            setWsChannel(ws)\n        }\n        createChanel()\n    }, [])\n\n    return (\n        <div>\n            <ChatMessages ws={wsChannel}/>\n            <ChatMessageForm ws={wsChannel}/>\n        </div>\n    )\n}\n\nconst ChatMessages: React.FC<{ ws: WebSocket | null }> = ({ws}) => {\n    const [messages, setMessages] = useState<ChatMessageType[]>([])\n\n    useEffect(() => {\n        ws?.addEventListener('message', (e) => {\n            let newMessages = JSON.parse(e.data);\n            setMessages((prevMessages) => [...prevMessages, ...newMessages])\n        })\n    }, [ws])\n\n    return (\n        <div style={{height: 350, overflowY: \"auto\"}}>\n            {messages.map((m, index) => <ChatMessage key={index} message={m}/>)}\n        </div>\n    )\n}\n\nconst ChatMessage: React.FC<{ message: ChatMessageType }> = ({message}) => {\n    return (\n        <div>\n            <img style={{width: 40}} src={message.photo}/><b>{message.userName}</b>\n            <div>{message.message}</div>\n            <hr/>\n        </div>\n    )\n}\n\nconst ChatMessageForm: React.FC<{ ws: WebSocket | null }> = ({ws}) => {\n    const [message, setMessage] = useState('')\n    const [readyStatus, setReadyStatus] = useState<'pending' | 'ready'>('pending')\n\n    useEffect(() => {\n        ws?.addEventListener('open', () => {\n            setReadyStatus('ready')\n        })\n    }, [ws])\n\n    const sendMessage = () => {\n        if (!message) {\n            return\n        }\n        ws?.send(message)\n        setMessage('')\n    }\n\n    return (\n        <div>\n            <div>\n                <textarea onChange={(e) => setMessage(e.currentTarget.value)}\n                          value={message}></textarea>\n            </div>\n            <div>\n                <button disabled={ws === null && readyStatus !== 'ready'} onClick={sendMessage}>Send</button>\n            </div>\n        </div>\n    )\n}\n\nexport default ChatPage"],"sourceRoot":""}