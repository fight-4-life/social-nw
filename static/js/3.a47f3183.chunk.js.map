{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","ProfileStatusWithHooks","props","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","ProfileInfo","profile","className","styles","descriptionBlock","aboutMe","src","photos","large","Preloader","Post","item","message","likes","maxLength10","maxLengthCreator","AddPostMessageReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","placeholder","name","validate","required","MyPosts","postsElements","posts","reverse","map","post","key","id","likesCount","postsBlock","values","addNewPost","newPostText","MyPostsContainer","connect","state","profilePage","dispatch","addNewPostActionCreator","Profile","content","ProfileContainer","userId","this","match","params","authorizedUserId","history","push","getUserProfile","getStatus","React","Component","compose","auth","withRouter"],"mappings":"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","file":"static/js/3.a47f3183.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__3cd8Y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__2ifKf\",\"post\":\"MyPosts_post__38Ltf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__ihtu9\"};","import React from 'react';\nimport styles from './ProfileInfo.module.css';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\n\nconst ProfileStatusWithHooks = (props) => {\n\n       let [editMode, setEditMode]= useState(false)\n       let [status, setStatus] = useState(props.status)\n\n       useEffect( () => {\n            setStatus(props.status)\n       }, [props.status]\n       )\n\n       const activateEditMode = () => {\n        setEditMode(true)\n    }\n      \n        const  deactivateEditMode = () => {\n        setEditMode(false)\n        props.updateStatus(status)\n    }\n\n         const onStatusChange = (e) => {\n        setStatus(e.currentTarget.value)\n    }\n\n        return (\n            <>  {!editMode &&\n                    <div>\n                        <span onDoubleClick={activateEditMode} >{props.status || '---'}</span>\n                    </div>\n                }\n                {editMode &&\n                    <div >\n                        <input onChange={onStatusChange} autoFocus={true} onBlur={deactivateEditMode} \n                        value={status}/>\n                    </div>\n                }\n            </>\n        )\n    }\n\nexport default ProfileStatusWithHooks;","import React from 'react';\nimport styles from './ProfileInfo.module.css';\nimport Preloader from '../../common/Preloader/Preloader';\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks';\n\nconst ProfileInfo = ({ profile, status, updateStatus }) => {\n  if (!profile) {\n    return <Preloader />\n  }\n\n  return (\n    <div className={styles.descriptionBlock}>\n      <div>\n        <p>About me: {profile.aboutMe}</p>\n      </div>\n      <div >\n        <img src={profile.photos.large} />\n        <ProfileStatusWithHooks status={status} updateStatus={updateStatus} />\n      </div>\n    </div>\n  );\n}\n\nexport default ProfileInfo;","import React from 'react';\nimport styles from './Post.module.css';\n\nfunction Post(props) {\n  return (\n    <div>\n      <div className={styles.item}>\n        <img src='https://thumbs.dreamstime.com/b/cute-young-man-avatar-cartoon-monochrome-userpic-vector-illustration-112487552.jpg' />\n          {props.message}\n        </div>\n  <div><button> {props.likes} likes </button></div>\n    </div>\n  );\n}\n\nexport default Post;\n","import React from 'react';\nimport styles from './MyPosts.module.css';\nimport Post from './Post/Post'\nimport { Field, reduxForm } from 'redux-form'\nimport { required, maxLengthCreator } from '../../../validators/validators';\nimport { Textarea } from '../../common/FormsControls/FormsControls';\n\nconst maxLength10 = maxLengthCreator(10)\n\nconst AddPostMessageForm = (props) => {\n  return (\n    <form onSubmit={props.handleSubmit}>\n      <div>\n        <Field component={Textarea} placeholder={'Type your message'} name={'newPostText'}\n          validate={[required, maxLength10]}\n        />\n      </div>\n      <div>\n        <button>Add post</button>\n      </div>\n\n    </form>\n  )\n}\n\nconst AddPostMessageReduxForm = reduxForm({ form: 'postMessageForm' })(AddPostMessageForm)\n\nconst MyPosts = (props) => {\n\n  let postsElements = [...props.posts]\n    .reverse()\n    .map(post => <Post message={post.post} key={post.id} likes={post.likesCount} />);\n\n  let addNewPostText = (values) => {\n    props.addNewPost(values.newPostText);\n  }\n\n  return (\n    <div className={styles.postsBlock}>\n      <h2>My posts</h2>\n      <div>\n        <AddPostMessageReduxForm onSubmit={addNewPostText} />\n      </div>\n      <div className={styles.post}>\n        {postsElements}\n      </div>\n    </div>\n  );\n}\n\nexport default MyPosts;\n","import React from 'react';\nimport MyPosts from './MyPosts';\nimport { addNewPostActionCreator} from '../../../redux/profileReducer';\nimport { connect } from 'react-redux';\n\nlet MapStateToProps = (state) => {\n  return {\n    posts: state.profilePage.posts\n  }\n}\n\nlet MapDispatchToProps = (dispatch) => {\n  return {\n    addNewPost: (newPostText) => {\n      dispatch(addNewPostActionCreator(newPostText));\n    }\n  }\n}\n\nconst MyPostsContainer = connect(MapStateToProps, MapDispatchToProps)(MyPosts)\n\nexport default MyPostsContainer;\n","import React from 'react';\nimport styles from './Profile.module.css';\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\n\nconst Profile = (props) => {\n  \n \n  return (\n    <div className={styles.content}>\n      <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus}/>\n      <MyPostsContainer/>\n    </div>\n  );\n}\n\nexport default Profile;","import React from 'react';\nimport Profile from './Profile';\nimport { connect } from 'react-redux';\nimport { getUserProfile, updateStatus, getStatus } from '../../redux/profileReducer'\nimport { withRouter } from 'react-router-dom';\nimport { compose } from 'redux';\n\nclass ProfileContainer extends React.Component {\n\n  componentDidMount() {\n    let userId = this.props.match.params.userId\n    if (!userId) {\n      userId = this.props.authorizedUserId\n      if (!userId) {\n        this.props.history.push('/login')\n      }\n    }\n    this.props.getUserProfile(userId)\n    this.props.getStatus(userId)\n  }\n\n  render() {\n    return <Profile {...this.props}\n      profile={this.props.profile}\n      status={this.props.status}\n      updateStatus={this.props.updateStatus} />\n  }\n}\n\nlet mapStateToProps = (state) => ({\n  profile: state.profilePage.profile,\n  status: state.profilePage.status,\n  authorizedUserId: state.auth.id\n})\nexport default compose(\n  connect(mapStateToProps, { getUserProfile, getStatus, updateStatus }),\n  withRouter\n  // withAuthRedirect\n)(ProfileContainer)"],"sourceRoot":""}